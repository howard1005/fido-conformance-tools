/* -----

    COPYRIGHT FIDO ALLIANCE 2016-2020
    AUTHOR: YURIY ACKERMANN <YURIY@FIDOALLIANCE.ORG> <YURIY.ACKERMANN@GMAIL.COM>

    ANY MODIFICATION OF THIS CODE WITHOUT PRIOR CONCENT BY FIDO ALLIANCE
    WILL BE TREATED AS A BREACH OF THE FIDO ALLIANCE END USER LICENSE AGREEMENT
    AND WILL RESULT IN CANCELATION OF THE CONFORMANCE TEST RESULTS
    AND TOTAL AND COMPLETE BAN FROM THE FIDO CERTIFICATION PROGRAMME

    FOR ANY QUESTIONS CONTACT CERTIFICATION@FIDOALLIANCE.ORG

    YOU CAN DOWNLOAD EULA BY OPENING MENU -> LEGAL INFORMATION

+----- */

'use strict';

/**
 * This is the source code for the Electron low level injections
 */

/* ----- Preload security fixes ----- */
const {ipcRenderer, shell} = require('electron');
const {version}            = require('./package.json');
const path                 = require('path');
const fs                   = require('fs');

process.on('uncaughtException', (error) => {
    console.log('Caught "uncaughtException":')
    console.log(error)
})

/* ----- Config injection ----- */
fs.writeFileSync(path.join(__dirname, 'app/js/preloadconfig.js'), `
/**
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 */

window.config = {
    'availableSuits': ${JSON.stringify(fs.readdirSync(path.join(__dirname, 'modules')))}
}

window.packageVersion = "${version}"

if(!window.forceReloadPage) {
    window.forceReloadPage = () => {
        location.reload();
    }
}

/**
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 * THIS IS AUTOGENERATED FILE! DO NOT MODIFY THIS FILE. THIS IS AUTOGENERATED FILE!
 */
`)

global.electronSupportedPlatforms = ['server', 'client', 'dom', 'hid', 'fidoauthenticator'];
global.currentPlatform            = 'electron';

/* ----- Low level management methods injections ----- */
global.openInspector = () => {
    ipcRenderer.send('open-inspector', '');
}

global.quitApp = () => {
    ipcRenderer.send('quit-app', '');
}

global.openToolsInBrowser = () => {
    shell.openExternal('http://localhost:61904');
}

global.openLinkInBrowser = (link) => {
    shell.openExternal(link);
}

global.forceReloadPage = () => {
    ipcRenderer.send('force-reload-page', '');
}

/* ----- SetImmediate fix ----- */
var _setImmediate = setImmediate;
process.once('loaded', function() {
    global.setImmediate = _setImmediate;
});

/* ----- FIDO API injections ----- */
if (!global.navigator.fido)
    global.navigator.fido = {};

console.log('Loading U2F, UAF and FIDO2 Conformance testing API...');
const FIDO2ConfTestAPI  = require('./dependencies/fido2dep');
const UAFV11ConfTestAPI = require('./dependencies/uafv11dep');

global.navigator.fido.fido2  = FIDO2ConfTestAPI;
global.navigator.fido.uafv11 = UAFV11ConfTestAPI;

console.log('Preload complete');
